{"version":3,"sources":["components/Header.jsx","api.js","summary/GlobalData.jsx","summary/CountryData.jsx","components/Loader.jsx","summary/Summary.jsx","detailed/Chart.jsx","detailed/Detailed.jsx","App.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","className","variant","Button","color","component","Link","to","axios","create","baseURL","GlobalData","data","TotalConfirmed","TotalDeaths","TotalRecovered","Paper","style","infoBlockStyle","Grid","container","item","xs","padding","CountryData","Country","height","Loader","loaderStyle","display","justifyContent","marginTop","Summary","useState","setData","useEffect","api","get","then","responce","spacing","Global","Countries","map","country","key","CountryCode","Chart","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","active","deaths","recovered","Detailed","countries","setCountries","countryCode","setCountryCode","countryData","setCountryData","sort","prev","next","forEach","el","push","Date","replace","Active","Deaths","Recovered","prepareData","detailedTitle","Select","selectStyle","labelId","id","value","onChange","e","target","MenuItem","Slug","marginLeft","App","Container","maxWidth","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f915e9c.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <Typography className=\"title\" variant='h6'>Covid19</Typography>\n        <Button color='inherit' component={Link} to=\"/\">Summary</Button>\n        <Button color='inherit' component={Link} to=\"/detailed\">Detailed</Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.covid19api.com/',\n})","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nfunction GlobalData({data:{TotalConfirmed, TotalDeaths, TotalRecovered}}) {\n  return (\n    <Paper style={infoBlockStyle}>\n      <Grid container>\n        <Grid item xs={3}>\n          <Typography variant='h4'>Global</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography variant='h6'>Confirmed: {TotalConfirmed} </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography variant='h6'>Deaths: {TotalDeaths} </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography variant='h6'>Recovered: {TotalRecovered} </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default GlobalData;\n\nconst infoBlockStyle = {\n  padding: '10px',\n}","import React from 'react';\nimport Paper  from '@material-ui/core/Paper';\nimport Typography  from '@material-ui/core/Typography';\n\nfunction CountryData({data:{Country, TotalConfirmed, TotalDeaths, TotalRecovered}}) {\n  return (\n    <Paper style={infoBlockStyle}>\n      <Typography variant=\"h6\">{Country}</Typography>\n      <Typography variant=\"subtitle1\">Confirmed: {TotalConfirmed} </Typography>\n      <Typography variant=\"subtitle1\">Deaths: {TotalDeaths} </Typography>\n      <Typography variant=\"subtitle1\">Recovered: {TotalRecovered} </Typography>\n    </Paper>\n  );\n}\n\nexport default CountryData;\n\nconst infoBlockStyle = {\n  padding: '10px',\n  height: '150px',\n}\n","import React from 'react';\n\nfunction Loader() {\n  return (\n    <div style={loaderStyle}>\n      <div className='lds-dual-ring'></div>\n    </div>\n  );\n}\n\nexport default Loader;\n\nconst loaderStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '70px',\n};\n","import React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport Grid from '@material-ui/core/Grid';\nimport GlobalData from './GlobalData';\nimport CountryData from './CountryData';\nimport Loader from '../components/Loader';\n\nfunction Summary() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    api.get('/summary').then((responce) => setData(responce.data));\n  }, []);\n  return data ? (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <GlobalData data={data.Global} />\n      </Grid>  \n      {data.Countries.map(country => (\n        <Grid item xs={3} key={country.CountryCode}>\n          <CountryData data={country}/>\n        </Grid>\n      ))}\n    </Grid>\n  ) : <Loader/>;\n}\n\nexport default Summary;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction Chart({data: { country, labels, active, deaths, recovered } }) {\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: 'Active',\n        backgroundColor: 'rgba(0,0,255,0.2)',\n        borderColor: 'rgba(0,0,255,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(0,0,255,0.4)',\n        hoverBorderColor: 'rgba(0,0,255,1)',\n        data: active,\n      },\n      {\n        label: 'Deaths',\n        backgroundColor: 'rgba(255,0,0,0.2)',\n        borderColor: 'rgba(255,0,0,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,0,0,0.4)',\n        hoverBorderColor: 'rgba(255,0,0,1)',\n        data: deaths,\n      },\n      {\n        label: 'Recovered',\n        backgroundColor: 'rgba(0,255,0,0.2)',\n        borderColor: 'rgba(0,255,0,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(0,255,0,0.4)',\n        hoverBorderColor: 'rgba(0,255,0,1)',\n        data: recovered,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h2>Detailed Statistic: {country}</h2>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport Select  from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chart from './Chart';\nimport Typography from '@material-ui/core/Typography';\n\n\nfunction Detailed() {\n  const [countries, setCountries] = useState([]);\n  const [countryCode, setCountryCode] = useState('ukraine');\n  const [countryData, setCountryData] = useState(null);\n\n  useEffect(() => {\n    api.get('/countries').then(responce => setCountries(sortCountries(responce.data)))\n  }, []);\n\n  useEffect(() => {\n     api.get('/total/country/'+countryCode).then(responce=>setCountryData(prepareData(responce.data)));\n  }, [countryCode]);\n\n  function handleChange(e) {\n    setCountryCode(e.target.value);\n  }\n\n  return (\n    <div>\n      <Typography style={detailedTitle} variant=\"h6\">Select the country:\n      <Select style={selectStyle}\n        labelId='demo-simple-select-label'\n        id='demo-simple-select'\n        value={countryCode}\n        onChange={handleChange}\n      >\n        {countries.map(country => <MenuItem value={country.Slug} key={country.Slug}>{country.Country}</MenuItem> )}\n      </Select>\n      </Typography>\n      {countryData ? <Chart data={countryData} /> : null }\n    </div>\n  );\n}\n\nexport default Detailed;\n\n\nfunction prepareData(data) {\n  const chartData = {\n    country: '',\n    labels: [],\n    active: [],\n    deaths: [],\n    recovered: [],\n  }\n\n  data.forEach(el => {\n    chartData.country = el.Country;\n    chartData.labels.push(el.Date.replace(/T.*$/, ''));\n    chartData.active.push(el.Active);\n    chartData.deaths.push(el.Deaths);\n    chartData.recovered.push(el.Recovered);\n  });\n\n  return chartData;\n}\n\nfunction sortCountries(data) {\n  data.sort((prev, next) => {\n    if (prev.Country < next.Country) {\n      return -1;\n    }\n    if (prev.Country > next.Country) {\n      return 1;\n    }\n    return 0;\n  })\n  return data;\n}\n\nconst detailedTitle = {\n  marginTop: '20px',\n}\n\nconst selectStyle = {\n  marginLeft: '20px',\n  padding: '0px 10px',\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport Header from './components/Header';\nimport Summary from './summary/Summary';\nimport Detailed from './detailed/Detailed';\n\nfunction App() {\n  return (\n    <Container maxWidth='md'>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path='/'>\n            <Summary />\n          </Route>\n          <Route path='/detailed'>\n            <Detailed />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'typeface-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}